{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
     "metadata":{
        "comments": "This playbook will add Host entity to a new or exsisting watchlist.",
        "author": "Yaniv Shasha"
    }, 
    "parameters": {
        "PlaybookName": {
            "defaultValue": "Watchlist-Add-hostToWatchList-IncidentTrigger",
            "type": "String"
        },
        "AzureSentinelWorkspaceName": {
            "defaultValue": "The Azure Sentinel workspace name",
            "type": "string"
        },
        "AzureSentinelResourceGroup": {
            "defaultValue": "The AzureSentinel resource group",
            "type": "string"
        },
         "SubscriptionID": {
            "defaultValue": "The Azure Sentinel subscription ID",
            "type": "string"
        },
        "WatchlistName": {
            "defaultValue": "Name of watchlist",
            "type": "string"
        }
    },
   "variables": {
        "azuremonitorlogs": "[concat('azuremonitorlogs-', parameters('PlaybookName'))]",
        "azuresentinel": "[concat('azureloganalyticsdatacollector-', parameters('PlaybookName'))]"

    },
    "resources": [
          {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('azuremonitorlogs')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuremonitorlogs')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('azuresentinel')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('PlaybookName')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "LogicAppsCategory": "security"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('azuremonitorlogs'))]",
                "[resourceId('Microsoft.Web/connections', variables('azuresentinel'))]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "When_Azure_Sentinel_incident_creation_rule_was_triggered": {
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "body": {
                                    "callback_url": "@{listCallbackUrl()}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "path": "/incident-creation"
                            }
                        }
                    },
                    "actions": {
                        "Entities_-_Get_Hosts": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/entities/host"
                            }
                        },
                        "For_each_4": {
                            "foreach": "@body('Entities_-_Get_Hosts')?['Hosts']",
                            "actions": {
                                "Condition": {
                                    "actions": {},
                                    "runAfter": {
                                        "Parse_JSON": [
                                            "Succeeded"
                                        ]
                                    },
                                    "else": {
                                        "actions": {
                                            "For_each": {
                                                "foreach": "@body('Entities_-_Get_Hosts')?['Hosts']",
                                                "actions": {
                                                    "Set_variable": {
                                                        "runAfter": {},
                                                        "type": "SetVariable",
                                                        "inputs": {
                                                            "name": "Host",
                                                            "value": {
                                                                "host": "@{items('For_each')?['HostName']}"
                                                            }
                                                        }
                                                    },
                                                    "Watchlists_-_Add_a_new_watchlist_item": {
                                                        "runAfter": {
                                                            "Set_variable": [
                                                                "Succeeded"
                                                            ]
                                                        },
                                                        "type": "ApiConnection",
                                                        "inputs": {
                                                            "body": "@variables('Host')",
                                                            "host": {
                                                                "connection": {
                                                                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                                }
                                                            },
                                                            "method": "put",
                                                            "path": "/Watchlists/subscriptions/@{encodeURIComponent(variables('SubscriptionID'))}/resourceGroups/@{encodeURIComponent(variables('ResourceGroup'))}/workspaces/@{encodeURIComponent(variables('WorkspaceName'))}/watchlists/@{encodeURIComponent(variables('WatchlistName'))}/watchlistItem"
                                                        }
                                                    }
                                                },
                                                "runAfter": {},
                                                "type": "Foreach"
                                            }
                                        }
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "greater": [
                                                    "@length(body('Parse_JSON')?['value'])",
                                                    0
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                },
                                "Parse_JSON": {
                                    "runAfter": {
                                        "Run_query_and_list_results": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ParseJson",
                                    "inputs": {
                                        "content": "@body('Run_query_and_list_results')",
                                        "schema": {
                                            "properties": {
                                                "body": {
                                                    "properties": {
                                                        "value": {
                                                            "items": {
                                                                "properties": {
                                                                    "LastUpdatedTimeUTC": {
                                                                        "type": "string"
                                                                    },
                                                                    "SearchKey": {
                                                                        "type": "string"
                                                                    },
                                                                    "_DTItemId": {
                                                                        "type": "string"
                                                                    },
                                                                    "host": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "_DTItemId",
                                                                    "LastUpdatedTimeUTC",
                                                                    "SearchKey",
                                                                    "host"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "headers": {
                                                    "properties": {
                                                        "Cache-Control": {
                                                            "type": "string"
                                                        },
                                                        "Content-Length": {
                                                            "type": "string"
                                                        },
                                                        "Content-Type": {
                                                            "type": "string"
                                                        },
                                                        "Date": {
                                                            "type": "string"
                                                        },
                                                        "Expires": {
                                                            "type": "string"
                                                        },
                                                        "Pragma": {
                                                            "type": "string"
                                                        },
                                                        "Set-Cookie": {
                                                            "type": "string"
                                                        },
                                                        "Strict-Transport-Security": {
                                                            "type": "string"
                                                        },
                                                        "Timing-Allow-Origin": {
                                                            "type": "string"
                                                        },
                                                        "Transfer-Encoding": {
                                                            "type": "string"
                                                        },
                                                        "Vary": {
                                                            "type": "string"
                                                        },
                                                        "X-Content-Type-Options": {
                                                            "type": "string"
                                                        },
                                                        "X-Frame-Options": {
                                                            "type": "string"
                                                        },
                                                        "x-ms-apihub-cached-response": {
                                                            "type": "string"
                                                        },
                                                        "x-ms-request-id": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "statusCode": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "Run_query_and_list_results": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": "_GetWatchlist('@{variables('WatchlistName')}')\n| where host contains \"@{items('For_each_4')?['HostName']}\"",
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/queryData",
                                        "queries": {
                                            "resourcegroups": "@variables('ResourceGroup')",
                                            "resourcename": "@variables('WorkspaceName')",
                                            "resourcetype": "Log Analytics Workspace",
                                            "subscriptions": "@variables('SubscriptionID')",
                                            "timerange": "timegenerted 4 hr"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "WatchListName": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "Number_of_Runs": {
                            "runAfter": {
                                "Variable_Host": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "runs",
                                        "type": "integer",
                                        "value": 0
                                    }
                                ]
                            }
                        },
                        "ResourceGroup": {
                            "runAfter": {
                                "SubscriptionID": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "ResourceGroup",
                                        "type": "string",
                                        "value": ""
                                    }
                                ]
                            }
                        },
                        "SubscriptionID": {
                            "runAfter": {
                                "Number_of_Runs": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "SubscriptionID",
                                        "type": "string",
                                        "value": ""
                                    }
                                ]
                            }
                        },
                        "Variable_Host": {
                            "runAfter": {
                                "Entities_-_Get_Hosts": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Host",
                                        "type": "object"
                                    }
                                ]
                            }
                        },
                        "WatchListName": {
                            "runAfter": {
                                "WorkspaceName": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "WatchlistName",
                                        "type": "string",
                                        "value": ""
                                    }
                                ]
                            }
                        },
                        "WorkspaceName": {
                            "runAfter": {
                                "ResourceGroup": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "WorkspaceName",
                                        "type": "string",
                                        "value": ""
                                    }
                                ]
                            }
                        }
                    },
                    "outputs": {}
                },
               "parameters": {
                    "$connections": {
                        "value": {
                            "azuremonitorlogs": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('azuremonitorlogs'))]",
                                "connectionName": "[variables('azuremonitorlogs')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuremonitorlogs')]"
                            },
                            "azuresentinel": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('azuresentinel'))]",
                                "connectionName": "[variables('azuresentinel')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                            }
                        }
                    }
                }
            }
        }
    ]
}